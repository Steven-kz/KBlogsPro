const t=JSON.parse('{"key":"v-dd9399f2","path":"/interview/java/class.html","title":"类加载过程","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","description":"类加载过程 加载 &gt;&gt; 验证 &gt;&gt; 准备 &gt;&gt; 解析 &gt;&gt; 初始化 &gt;&gt; 使用 &gt;&gt; 卸载 img 一、加载 提示 简单来说:加载指的是把class字节码文件通过类加载器装载入内存中。 一个Java文件从编码完成到最终执行，一般主要包括两个过程：编译和运行，其中编译就是把我们写好的java文件，通过javac命令编译成字节码，也就是我们常说的.class文件，然后运行则是把编译声称的.class文件交给Java虚拟机(JVM)执行。而我们所说的类加载过程即是指JVM虚拟机把.class文件中类信息加载进内存，并进行解析生成对应的class对象的过程。 反射的机制即基于这一基础。如果 JVM 没有将 Java 类的声明信息存储起来，则 JVM 在运行期也无法反射","head":[["meta",{"property":"og:url","content":"https://steven-kz.github.io/KBlogsPro/KBlogsPro/interview/java/class.html"}],["meta",{"property":"og:site_name","content":"Flowers"}],["meta",{"property":"og:title","content":"类加载过程"}],["meta",{"property":"og:description","content":"类加载过程 加载 &gt;&gt; 验证 &gt;&gt; 准备 &gt;&gt; 解析 &gt;&gt; 初始化 &gt;&gt; 使用 &gt;&gt; 卸载 img 一、加载 提示 简单来说:加载指的是把class字节码文件通过类加载器装载入内存中。 一个Java文件从编码完成到最终执行，一般主要包括两个过程：编译和运行，其中编译就是把我们写好的java文件，通过javac命令编译成字节码，也就是我们常说的.class文件，然后运行则是把编译声称的.class文件交给Java虚拟机(JVM)执行。而我们所说的类加载过程即是指JVM虚拟机把.class文件中类信息加载进内存，并进行解析生成对应的class对象的过程。 反射的机制即基于这一基础。如果 JVM 没有将 Java 类的声明信息存储起来，则 JVM 在运行期也无法反射"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-17T07:21:31.000Z"}],["meta",{"property":"article:author","content":"Kou"}],["meta",{"property":"article:modified_time","content":"2023-10-17T07:21:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类加载过程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-17T07:21:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kou\\",\\"url\\":\\"https://steven-kz.github.io/KBlogsPro/\\"}]}"]]},"headers":[{"level":2,"title":"一、加载","slug":"一、加载","link":"#一、加载","children":[]},{"level":2,"title":"二、验证","slug":"二、验证","link":"#二、验证","children":[]},{"level":2,"title":"三、准备","slug":"三、准备","link":"#三、准备","children":[]},{"level":2,"title":"四、解析","slug":"四、解析","link":"#四、解析","children":[]},{"level":2,"title":"五、初始化","slug":"五、初始化","link":"#五、初始化","children":[]}],"git":{"createdTime":1697524995000,"updatedTime":1697527291000,"contributors":[{"name":"kou","email":"knightbreeze@163.com","commits":2}]},"readingTime":{"minutes":1.89,"words":568},"filePathRelative":"interview/java/class.md","localizedDate":"2023年10月17日","excerpt":"<h1> 类加载过程</h1>\\n<p><strong>加载 &gt;&gt; 验证 &gt;&gt; 准备 &gt;&gt; 解析 &gt;&gt; 初始化</strong> &gt;&gt; 使用 &gt;&gt; 卸载</p>\\n<figure><img src=\\"https://gitee.com/k-flower/picImgs/raw/master/imgaes/20231017144459.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>\\n<h2> 一、加载</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>简单来说:加载指的是把class字节码文件通过类加载器装载入内存中。</p>\\n<p><strong>一个Java文件从编码完成到最终执行，一般主要包括两个过程：编译和运行，其中编译就是把我们写好的java文件，通过javac命令编译成字节码，也就是我们常说的.class文件，然后运行则是把编译声称的.class文件交给Java虚拟机(JVM)执行。而我们所说的类加载过程即是指JVM虚拟机把.class文件中类信息加载进内存，并进行解析生成对应的class对象的过程。</strong></p>\\n<p>反射的机制即基于这一基础。如果 JVM 没有将 Java 类的声明信息存储起来，则 JVM 在运行期也无法反射</p>\\n</div>","autoDesc":true}');export{t as data};
